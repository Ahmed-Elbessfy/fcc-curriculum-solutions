{"index.js":"// Functional Programming: Refactor Global Variables Out of Functions\n// So far, we have seen two distinct principles for functional programming:\n\n// 1) Don't alter a variable or object - create new variables and objects and return them if need be from a function.\n\n// 2) Declare function arguments - any computation inside a function depends only on the arguments, and not on any global object or variable.\n\n// Adding one to a number is not very exciting, but we can apply these principles when working with arrays or more complex objects.\n\n\n// Refactor (rewrite) the code so the global array bookList is not changed inside either function. The add function should add the given bookName to the end of an array. The remove function should remove the given bookName from an array. Both functions should return an array, and any new parameters should be added before the bookName one.\n\n\nconsole.clear();\n\n// the global variable\nvar bookList = [\"The Hound of the Baskervilles\", \"On The Electrodynamics of Moving Bodies\", \"PhilosophiÃ¦ Naturalis Principia Mathematica\", \"Disquisitiones Arithmeticae\"];\n\n/* This function should add a book to the list and return the list */\n// New parameters should come before the bookName one\n\n// Add your code below this line\nfunction add (arr,bookName) {\n  let added_arr = [...arr];\n  added_arr.push(bookName);\n  return added_arr;\n  \n  // Add your code above this line\n}\n\n/* This function should remove a book from the list and return the list */\n// New parameters should come before the bookName one\n\n// Add your code below this line\nfunction remove (arr,bookName) {\n  let remove_arr = [...arr];\n  // let n = remove_arr.indexOf(bookName);\n  // if (n >= 0) {    \n  //   remove_arr.splice(n, 1, bookName);\n  //   return remove_arr;\n  //   // Add your code above this line\n  //   }\n  let res = remove_arr.indexOf(bookName) >= 0 ? remove_arr.splice(remove_arr.indexOf(bookName),1): \"No Such Book\";\n  return remove_arr;\n}\n\nvar newBookList = add(bookList, 'A Brief History of Time');\nvar newerBookList = remove(bookList, 'On The Electrodynamics of Moving Bodies');\nvar newestBookList = remove(add(bookList, 'A Brief History of Time'), 'On The Electrodynamics of Moving Bodies');\n\nconsole.log(bookList);\nconsole.log(newBookList);\nconsole.log( newerBookList);\nconsole.log(newestBookList);"}